# Kitty theme
shell /opt/homebrew/bin/fish --login --interactive
shell_integration enabled
map cmd+t launch --cwd=current --type=tab
font_size 19.0

# Performance
repaint_delay    20
input_delay 2
sync_to_monitor no


# Kitty's font was more spaced compared to alacritty's, tried font variations
# but it didn't change, so I went with this, it works fine
modify_font cell_width 100%
modify_font cell_height 100%
macos_thicken_font 0.2
# modify_font cell_height 3px
# modify_font baseline 1
# modify_font underline_position -2
# modify_font underline_thickness 150%
# modify_font strikethrough_position 2px

## cursor
cursor_blink_interval 0
cursor_stop_blinking_after 1

cursor_trail 0
# repaint_delay 10
#cursor_trail_decay 0.1 0.4
cursor_trail_start_threshold 60
mouse_hide_wait 3.0
focus_follows_mouse no

# The following command checks if tmux is installed.
# If tmux is installed, it automatically attaches to an existing tmux session.
# If no tmux session exists, a new one is created.
# If tmux is not installed, it simply starts zsh without tmux.
# shell zsh --login -c "if command -v tmux >/dev/null 2>&1; then tmux attach || tmux; else zsh; fi"

# Old version of above command:
# The 2 commands after login are needed to automatically attach to an existing 
# tmux session, if no session exists, a new one is created
# shell zsh --login -c "tmux attach || tmux"

# When you do fn+ctrl+shift+2 it opens the kitty file in the editor below
editor /opt/homebrew/bin/nvim
disable_ligatures   never
# These colors match what I have in my alacritty theme
# Commenting them as they're set by the theme on the top
# foreground #CDD6F4
# background #1E1E2E

# Make kitty borderless
# "yes" disables round corners and hides the title bar 
# "titlebar-only" leaves round corners but hides title bar
# hide_window_decorations yes
# hide_window_decorations titlebar-only
macos_show_window_title_in none
macos_titlebar_color #272727
macos_menubar_title_max_length 0
macos_option_as_alt yes


## Tab bar # ref https://github.dev/MariaSolOs/dotfiles
tab_bar_margin_width 5
tab_bar_margin_height 5 0
tab_bar_style separator
tab_separator ""
tab_bar_min_tabs 2
tab_title_template "{fmt.fg._5c6370}{fmt.bg.default}{fmt.fg._abb2bf}{fmt.bg._5c6370} ({index}) {tab.active_oldest_exe} {fmt.fg._5c6370}{fmt.bg.default} "
active_tab_title_template "{fmt.fg._BAA0E8}{fmt.bg.default}{fmt.fg.default}{fmt.bg._BAA0E8} ({index}) {tab.active_oldest_exe} {fmt.fg._BAA0E8}{fmt.bg.default} "

tab_bar_edge bottom
tab_bar_align center
# tab_bar_style slant
# tab_separator " ┇"
active_tab_font_style bold
inactive_tab_font_style normal

# tab_title_template "{index}: {title.split('/')[-1]}"


#: The window padding (in pts) (blank area between the text and the
#: window border). A single value sets all four sides. Two values set
#: the vertical and horizontal sides. Three values set top, horizontal
#: and bottom. Four values set top, right, bottom and left.
window_padding_width 1 2 
background_opacity 1 

clipboard_control write-clipboard write-primary read-clipboard read-primary
paste_actions no-op

# scrollback-pager
scrollback_lines 10000
map shift+cmd+s show_scrollback
scrollback_pager nvim -u NONE -R -M -c 'lua require("kitty_scrollback")(INPUT_LINE_NUMBER, CURSOR_LINE, CURSOR_COLUMN)' -
# scrollback_pager nvim --noplugin -u ~/.config/kitty/scrollback-pager/nvim/init.vim -c "silent write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "
wheel_scroll_multiplier 5.0
# scrollback_pager nvim -u NONE -R -M -c 'lua require("kitty+page")(INPUT_LINE_NUMBER, CURSOR_LINE, CURSOR_COLUMN)' -
# I'm adding these below the theme in case the theme sets them
# cursor #ffffff
# cursor_text_color #000000
#: Ask for confirmation when closing an OS window or a tab with at
#: least this number of kitty windows in it by window manager (e.g.
#: clicking the window close button or pressing the operating system
#: shortcut to close windows) or by the close_tab action. A value of
#: zero disables confirmation. This confirmation also applies to
#: requests to quit the entire application (all OS windows, via the
#: quit action). Negative values are converted to positive ones,
#: however, with shell_integration enabled, using negative values
#: means windows sitting at a shell prompt ae not counted, only
#: windows where some command is currently running. Note that if you
#: want confirmation when closing individual windows, you can map the
#: close_window_with_confirmation action.
confirm_os_window_close 1

copy_on_select yes
enabled_layouts splits:split_axis=horizontal
map f6 launch --location=vsplit
map f5 launch --location=hsplit
map ctrl+left neighboring_window left
map ctrl+right neighboring_window right
map ctrl+up neighboring_window up
map ctrl+down neighboring_window down
# map f6 goto_layout stack if current_layout() != 'stack' else last_layout
# map shift+cmd+z goto_layout stack
# map `>a goto_layout tall
map shift+cmd+z kitten zoom_toggle.py

# BEGIN_KITTY_THEME
# Tokyo Night Moon
include current-theme.conf
# END_KITTY_THEME


# BEGIN_KITTY_FONTS
font_family      family='VictorMono Nerd Font Mono' style=Medium
bold_font        family='VictorMono Nerd Font Mono' style=SemiBold
italic_font      family='VictorMono Nerd Font Mono' style='Medium Italic'
bold_italic_font family='VictorMono Nerd Font Mono' style='SemiBold Italic'
# END_KITTY_FONTS
